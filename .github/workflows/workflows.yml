name: UI and API

on:
  push:
    branches:
      - "*"

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  API_SERVICE_NAME: complete-word-api
  UI_SERVICE_NAME: complete-word-ui
  REGION: us-east4
  API_IMAGE_NAME: complete-word-api-image
  UI_IMAGE_NAME: complete-word-ui-image

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      api: ${{ steps.filter.outputs.api }}
      ui: ${{ steps.filter.outputs.ui }}
      workflow: ${{ steps.filter.outputs.workflow }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          base: ${{ github.ref }}
          filters: |
            api:
              - 'api/**'
            ui:
              - 'ui/**'
            workflow:
              - '.github/workflows/**'

  api:
    needs: detect-changes
    if: needs.detect-changes.outputs.api == 'true' || needs.detect-changes.outputs.workflow == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: api
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          sparse-checkout: |
            api/

      # Cache Google Cloud SDK
      - name: Cache Google Cloud SDK
        uses: actions/cache@v4
        with:
          path: ~/google-cloud-sdk
          key: gcloud-${{ runner.os }}-v512.0.0

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          version: 512.0.0
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: 512.0.0

      - name: Configure Docker to use gcloud for authentication
        run: gcloud auth configure-docker us-east4-docker.pkg.dev --quiet

      # Cache Docker layers
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-api-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-api-

      - name: Build and Push Docker Image
        run: |
          IMAGE=us-east4-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-docker-repo/${{ env.API_IMAGE_NAME }}:latest
          docker build \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max \
            -t $IMAGE .
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
          docker push $IMAGE

      - name: Deploy to Cloud Run
        run: |
          IMAGE=us-east4-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-docker-repo/${{ env.API_IMAGE_NAME }}:latest
          gcloud run deploy $API_SERVICE_NAME \
            --image $IMAGE \
            --service-account github-actions-deployer@${{secrets.GCP_PROJECT_ID}}.iam.gserviceaccount.com \
            --region us-east4 \
            --allow-unauthenticated

  ui:
    needs: detect-changes
    if: needs.detect-changes.outputs.ui == 'true' || needs.detect-changes.outputs.workflow == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ui
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          sparse-checkout: |
            ui/

      # Cache Google Cloud SDK
      - name: Cache Google Cloud SDK
        uses: actions/cache@v4
        with:
          path: ~/google-cloud-sdk
          key: gcloud-${{ runner.os }}-v512.0.0

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          version: 512.0.0
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: 512.0.0

      - name: Configure Docker to use gcloud for authentication
        run: gcloud auth configure-docker us-east4-docker.pkg.dev --quiet

      # Optional: Cache npm dependencies (only useful if building locally before docker)
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('ui/package-lock.json') }}
          restore-keys: |
            npm-

      # Cache Docker layers
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-ui-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-ui-

      - name: Build and Push Docker Image
        run: |
          IMAGE=us-east4-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-docker-repo/${{ env.UI_IMAGE_NAME }}:latest
          docker build \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max \
            -t $IMAGE .
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
          docker push $IMAGE

      - name: Deploy to Cloud Run
        run: |
          IMAGE=us-east4-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-docker-repo/${{ env.UI_IMAGE_NAME }}:latest
          gcloud run deploy $UI_SERVICE_NAME \
            --image $IMAGE \
            --service-account github-actions-deployer@${{secrets.GCP_PROJECT_ID}}.iam.gserviceaccount.com \
            --region us-east4 \
            --allow-unauthenticated \
            --memory=2Gi \
            --timeout=20m5s
